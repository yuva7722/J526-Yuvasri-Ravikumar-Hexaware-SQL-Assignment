J526 Yuvasri Ravikumar

Hexaware SQL Coding Challenge

Crime Management


1. Select all open incidents

mysql> select * from Crime where Status = 'Open';
+---------+--------------+--------------+------------------------+--------------------------------------+--------+
| CrimeID | IncidentType | IncidentDate | Location               | Description                          | Status |
+---------+--------------+--------------+------------------------+--------------------------------------+--------+
|       1 | Robbery      | 2023-09-15   | 123 Main St, Cityville | Armed robbery at a convenience store | Open   |
+---------+--------------+--------------+------------------------+--------------------------------------+--------+
1 row in set (0.00 sec)


2. Find the total number of incidents.

mysql> select count(CrimeID) as num_of_incidents from Crime;
+------------------+
| num_of_incidents |
+------------------+
|                3 |
+------------------+
1 row in set (0.00 sec)

3. List all unique incident types.

mysql> select distinct IncidentType from Crime;
+--------------+
| IncidentType |
+--------------+
| Robbery      |
| Homicide     |
| Theft        |
+--------------+
3 rows in set (0.01 sec)

4.Retrieve incidents that occurred between '2023-09-01' and '2023-09-10'.

mysql> select CrimeID,IncidentType,IncidentDate from Crime where IncidentDate between '2023-09-01' and '2023-09-10';
+---------+--------------+--------------+
| CrimeID | IncidentType | IncidentDate |
+---------+--------------+--------------+
|       3 | Theft        | 2023-09-10   |
+---------+--------------+--------------+
1 row in set (0.00 sec)

5.List persons involved in incidents in descending order of age.

//there is no column called age in both suspect as well as victim table, so creating age column for both

 alter table Suspect add suspect_age int;
 
update Suspect set suspect_age = 41 where SuspectID = 1;
update Suspect set suspect_age = 42 where SuspectID = 2;
update Suspect set suspect_age = 35 where SuspectID = 3;

alter table Victim add victim_age int;

update Victim set victim_age = 30 where VictimID = 1;
update Victim set victim_age = 71 where VictimID = 2;
update Victim set victim_age = 60 where VictimID = 3;

mysql> select Name,victim_age as age from Victim union all select Name,suspect_age as age from Suspect order by age desc;
+---------------+------+
| Name          | age  |
+---------------+------+
| Jane Smith    |   71 |
| Alice Johnson |   60 |
| Unknown       |   42 |
| Robber 1      |   41 |
| Suspect 1     |   35 |
| John Doe      |   30 |
+---------------+------+
6 rows in set (0.00 sec)


6. Find the average age of persons involved in incidents.

mysql> select avg(age) as average_age from( select victim_age as age from Victim union select suspect_age as age from Suspect) as VictimAndSuspect;
+-------------+
| average_age |
+-------------+
|     46.5000 |
+-------------+
1 row in set (0.01 sec)

7.List incident types and their counts, only for open cases.

mysql> select IncidentType, count(*) as open_count from Crime where Status='Open' group by IncidentType;
+--------------+------------+
| IncidentType | open_count |
+--------------+------------+
| Robbery      |          1 |
+--------------+------------+
1 row in set (0.00 sec)


8. Find persons with names containing 'Doe'.

mysql> select Name from Suspect where Name like '%Doe%' union select Name from Victim where Name like '%Doe';
+----------+
| Name     |
+----------+
| John Doe |
+----------+
1 row in set (0.00 sec)

9.Retrieve the names of persons involved in open cases and closed cases.

mysql> select Name from Victim where CrimeID in (select CrimeID from Crime where Status in ('Open','Closed')) union select Name from Suspect where CrimeID in (select CrimeID from Crime where Status in ('Open','Closed'));
+---------------+
| Name          |
+---------------+
| John Doe      |
| Alice Johnson |
| Robber 1      |
| Suspect 1     |
+---------------+
4 rows in set (0.00 sec)


10. List incident types where there are persons aged 30 or 35 involved.

mysql> select IncidentType from Crime where CrimeID in (select CrimeID from Suspect where suspect_age in(30,35)) union select IncidentType from Crime where CrimeID in (select CrimeID from Victim where victim_age in(30,35));
+--------------+
| IncidentType |
+--------------+
| Theft        |
| Robbery      |
+--------------+
2 rows in set (0.01 sec)

11. Find persons involved in incidents of the same type as 'Robbery'.

mysql> select Name from Victim where CrimeID = (select CrimeID from Crime where IncidentType = 'Robbery') union select Name from Suspect where CrimeID = (select CrimeID from Crime where IncidentType = 'Robbery');
+----------+
| Name     |
+----------+
| John Doe |
| Robber 1 |
+----------+
2 rows in set (0.00 sec)

12. List incident types with more than one open case.

mysql> select IncidentType,count(*) as count_of_open from Crime where Status = 'Open' group by IncidentType having count_of_open > 1;
Empty set (0.00 sec)


13. List all incidents with suspects whose names also appear as victims in other incidents.

mysql> select Name from Suspect s where Name in ( select Name from Victim v where s.Name != v.Name);
Empty set (0.00 sec)

14. Retrieve all incidents along with victim and suspect details

mysql> select c.CrimeID,c.IncidentType,c.IncidentDate,c.Location as crime_location,c.Description, c.Status, v.VictimID, v.Name as victim_name, victim_age, v.ContactInfo as victim_contactInfo, v.Injuries as victim_injuries,
    -> s.SuspectID, s.Name as suspect_name, s.Description as suspect_description, s.CriminalHistory as suspect_criminal_history from Crime c left join Victim v on c.CrimeID = v.CrimeID left join Suspect s on c.CrimeID = s.CrimeID;
+---------+--------------+--------------+-------------------------+--------------------------------------+---------------------+----------+---------------+------------+--------------------------+-----------------+-----------+--------------+-------------------------+------------------------------+
| CrimeID | IncidentType | IncidentDate | crime_location          | Description                          | Status              | VictimID | victim_name   | victim_age | victim_contactInfo       | victim_injuries | SuspectID | suspect_name | suspect_description     | suspect_criminal_history     |
+---------+--------------+--------------+-------------------------+--------------------------------------+---------------------+----------+---------------+------------+--------------------------+-----------------+-----------+--------------+-------------------------+------------------------------+
|       1 | Robbery      | 2023-09-15   | 123 Main St, Cityville  | Armed robbery at a convenience store | Open                |        1 | John Doe      |         30 | johndoe@example.com      | Minor injuries  |         1 | Robber 1     | Armed and masked robber | Previous robbery convictions |
|       2 | Homicide     | 2023-09-20   | 456 Elm St, Townsville  | Investigation into a murder case     | Under Investigation |        2 | Jane Smith    |         71 | janesmith@example.com    | Deceased        |         2 | Unknown      | Investigation ongoing   | NULL                         |
|       3 | Theft        | 2023-09-10   | 789 Oak St, Villagetown | Shoplifting incident at a mall       | Closed              |        3 | Alice Johnson |         60 | alicejohnson@example.com | None            |         3 | Suspect 1    | Shoplifting suspect     | Prior shoplifting arrests    |
+---------+--------------+--------------+-------------------------+--------------------------------------+---------------------+----------+---------------+------------+--------------------------+-----------------+-----------+--------------+-------------------------+------------------------------+
3 rows in set (0.00 sec)

15. Find incidents where the suspect is older than any victim.

mysql> select CrimeID, IncidentType from Crime c where CrimeID in ( select CrimeID from Suspect s where s.CrimeID=c.CrimeID and suspect_age > any( select victim_age from Victim v where v.CrimeID= s.CrimeID));
+---------+--------------+
| CrimeID | IncidentType |
+---------+--------------+
|       1 | Robbery      |
+---------+--------------+
1 row in set (0.00 sec)

16. Find suspects involved in multiple incidents

mysql> select SuspectID, Name,count(SuspectID) as multiple_incidents from Suspect group by SuspectID having multiple_incidents > 1;
Empty set (0.00 sec)

17.List incidents with no suspects involved.

mysql> select CrimeID,IncidentType from Crime where CrimeID not in (select CrimeID from Suspect);
Empty set (0.00 sec)


18. List all cases where at least one incident is of type 'Homicide' and all other incidents are of type 'Robbery'.

mysql> select * from Crime where IncidentType in ('Homicide','Robbery');
+---------+--------------+--------------+------------------------+--------------------------------------+---------------------+
| CrimeID | IncidentType | IncidentDate | Location               | Description                          | Status              |
+---------+--------------+--------------+------------------------+--------------------------------------+---------------------+
|       1 | Robbery      | 2023-09-15   | 123 Main St, Cityville | Armed robbery at a convenience store | Open                |
|       2 | Homicide     | 2023-09-20   | 456 Elm St, Townsville | Investigation into a murder case     | Under Investigation |
+---------+--------------+--------------+------------------------+--------------------------------------+---------------------+
2 rows in set (0.00 sec)

19. Retrieve a list of all incidents and the associated suspects, showing suspects for each incident, or 'No Suspect' if there are none.

mysql> select c.CrimeID, c.IncidentType,c.IncidentDate,c.Location,case when
    -> s.Name is null then 'No Suspect' else s.Name end as suspect from Crime c left join Suspect s on c.CrimeID = s.CrimeID;
+---------+--------------+--------------+-------------------------+-----------+
| CrimeID | IncidentType | IncidentDate | Location                | suspect   |
+---------+--------------+--------------+-------------------------+-----------+
|       1 | Robbery      | 2023-09-15   | 123 Main St, Cityville  | Robber 1  |
|       2 | Homicide     | 2023-09-20   | 456 Elm St, Townsville  | Unknown   |
|       3 | Theft        | 2023-09-10   | 789 Oak St, Villagetown | Suspect 1 |
+---------+--------------+--------------+-------------------------+-----------+
3 rows in set (0.00 sec)

20. List all suspects who have been involved in incidents with incident types 'Robbery' or 'Assault'

mysql> select * from Suspect where CrimeID in (select CrimeID from Crime where IncidentType in('Robbery','Assault'));
+-----------+---------+----------+-------------------------+------------------------------+-------------+
| SuspectID | CrimeID | Name     | Description             | CriminalHistory              | suspect_age |
+-----------+---------+----------+-------------------------+------------------------------+-------------+
|         1 |       1 | Robber 1 | Armed and masked robber | Previous robbery convictions |          41 |
+-----------+---------+----------+-------------------------+------------------------------+-------------+
1 row in set (0.00 sec)